// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SidebarContainer Component render snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SidebarContainer
    currentLabel="TODOS"
    dispatch={[MockFunction]}
    hideText={false}
    labels={
      Array [
        Object {
          "id": 1,
          "name": "TODOS",
        },
        Object {
          "id": 2,
          "name": "Work",
        },
      ]
    }
    setCurrentLabel={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Box>
          <div
            className="labelItems"
          >
            <div
              className="label_container label_border"
            >
              <Label
                hideText={false}
                onClick={[Function]}
                text="TODOS"
              >
                <Icon
                  iconName="TODOS"
                />
              </Label>
              <Conditional
                condition={false}
              >
                <Icon
                  className="label_container_icon"
                  icon="delete.svg"
                  onClick={[Function]}
                />
              </Conditional>
            </div>
            <div
              className="label_container "
            >
              <Label
                hideText={false}
                onClick={[Function]}
                text="Work"
              >
                <Icon
                  iconName="Work"
                />
              </Label>
              <Conditional
                condition={true}
              >
                <Icon
                  className="label_container_icon"
                  icon="delete.svg"
                  onClick={[Function]}
                />
              </Conditional>
            </div>
          </div>
        </Box>,
        <Conditional
          condition={true}
        >
          <TodoForm
            addTODO={[Function]}
            direction="column"
            maxLength={10}
            placeholderText="Add Label"
          />
        </Conditional>,
      ],
      "className": "sidebar sidebar__large",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <div
            className="labelItems"
          >
            <div
              className="label_container label_border"
            >
              <Label
                hideText={false}
                onClick={[Function]}
                text="TODOS"
              >
                <Icon
                  iconName="TODOS"
                />
              </Label>
              <Conditional
                condition={false}
              >
                <Icon
                  className="label_container_icon"
                  icon="delete.svg"
                  onClick={[Function]}
                />
              </Conditional>
            </div>
            <div
              className="label_container "
            >
              <Label
                hideText={false}
                onClick={[Function]}
                text="Work"
              >
                <Icon
                  iconName="Work"
                />
              </Label>
              <Conditional
                condition={true}
              >
                <Icon
                  className="label_container_icon"
                  icon="delete.svg"
                  onClick={[Function]}
                />
              </Conditional>
            </div>
          </div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="label_container label_border"
              >
                <Label
                  hideText={false}
                  onClick={[Function]}
                  text="TODOS"
                >
                  <Icon
                    iconName="TODOS"
                  />
                </Label>
                <Conditional
                  condition={false}
                >
                  <Icon
                    className="label_container_icon"
                    icon="delete.svg"
                    onClick={[Function]}
                  />
                </Conditional>
              </div>,
              <div
                className="label_container "
              >
                <Label
                  hideText={false}
                  onClick={[Function]}
                  text="Work"
                >
                  <Icon
                    iconName="Work"
                  />
                </Label>
                <Conditional
                  condition={true}
                >
                  <Icon
                    className="label_container_icon"
                    icon="delete.svg"
                    onClick={[Function]}
                  />
                </Conditional>
              </div>,
            ],
            "className": "labelItems",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Label
                    hideText={false}
                    onClick={[Function]}
                    text="TODOS"
                  >
                    <Icon
                      iconName="TODOS"
                    />
                  </Label>,
                  <Conditional
                    condition={false}
                  >
                    <Icon
                      className="label_container_icon"
                      icon="delete.svg"
                      onClick={[Function]}
                    />
                  </Conditional>,
                ],
                "className": "label_container label_border",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "function",
                  "props": Object {
                    "children": <Icon
                      iconName="TODOS"
                    />,
                    "hideText": false,
                    "onClick": [Function],
                    "text": "TODOS",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "iconName": "TODOS",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <Icon
                      className="label_container_icon"
                      icon="delete.svg"
                      onClick={[Function]}
                    />,
                    "condition": false,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "className": "label_container_icon",
                      "icon": "delete.svg",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": "2",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Label
                    hideText={false}
                    onClick={[Function]}
                    text="Work"
                  >
                    <Icon
                      iconName="Work"
                    />
                  </Label>,
                  <Conditional
                    condition={true}
                  >
                    <Icon
                      className="label_container_icon"
                      icon="delete.svg"
                      onClick={[Function]}
                    />
                  </Conditional>,
                ],
                "className": "label_container ",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "2",
                  "nodeType": "function",
                  "props": Object {
                    "children": <Icon
                      iconName="Work"
                    />,
                    "hideText": false,
                    "onClick": [Function],
                    "text": "Work",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "iconName": "Work",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <Icon
                      className="label_container_icon"
                      icon="delete.svg"
                      onClick={[Function]}
                    />,
                    "condition": true,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "className": "label_container_icon",
                      "icon": "delete.svg",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <TodoForm
            addTODO={[Function]}
            direction="column"
            maxLength={10}
            placeholderText="Add Label"
          />,
          "condition": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "addTODO": [Function],
            "direction": "column",
            "maxLength": 10,
            "placeholderText": "Add Label",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Box>
            <div
              className="labelItems"
            >
              <div
                className="label_container label_border"
              >
                <Label
                  hideText={false}
                  onClick={[Function]}
                  text="TODOS"
                >
                  <Icon
                    iconName="TODOS"
                  />
                </Label>
                <Conditional
                  condition={false}
                >
                  <Icon
                    className="label_container_icon"
                    icon="delete.svg"
                    onClick={[Function]}
                  />
                </Conditional>
              </div>
              <div
                className="label_container "
              >
                <Label
                  hideText={false}
                  onClick={[Function]}
                  text="Work"
                >
                  <Icon
                    iconName="Work"
                  />
                </Label>
                <Conditional
                  condition={true}
                >
                  <Icon
                    className="label_container_icon"
                    icon="delete.svg"
                    onClick={[Function]}
                  />
                </Conditional>
              </div>
            </div>
          </Box>,
          <Conditional
            condition={true}
          >
            <TodoForm
              addTODO={[Function]}
              direction="column"
              maxLength={10}
              placeholderText="Add Label"
            />
          </Conditional>,
        ],
        "className": "sidebar sidebar__large",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <div
              className="labelItems"
            >
              <div
                className="label_container label_border"
              >
                <Label
                  hideText={false}
                  onClick={[Function]}
                  text="TODOS"
                >
                  <Icon
                    iconName="TODOS"
                  />
                </Label>
                <Conditional
                  condition={false}
                >
                  <Icon
                    className="label_container_icon"
                    icon="delete.svg"
                    onClick={[Function]}
                  />
                </Conditional>
              </div>
              <div
                className="label_container "
              >
                <Label
                  hideText={false}
                  onClick={[Function]}
                  text="Work"
                >
                  <Icon
                    iconName="Work"
                  />
                </Label>
                <Conditional
                  condition={true}
                >
                  <Icon
                    className="label_container_icon"
                    icon="delete.svg"
                    onClick={[Function]}
                  />
                </Conditional>
              </div>
            </div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="label_container label_border"
                >
                  <Label
                    hideText={false}
                    onClick={[Function]}
                    text="TODOS"
                  >
                    <Icon
                      iconName="TODOS"
                    />
                  </Label>
                  <Conditional
                    condition={false}
                  >
                    <Icon
                      className="label_container_icon"
                      icon="delete.svg"
                      onClick={[Function]}
                    />
                  </Conditional>
                </div>,
                <div
                  className="label_container "
                >
                  <Label
                    hideText={false}
                    onClick={[Function]}
                    text="Work"
                  >
                    <Icon
                      iconName="Work"
                    />
                  </Label>
                  <Conditional
                    condition={true}
                  >
                    <Icon
                      className="label_container_icon"
                      icon="delete.svg"
                      onClick={[Function]}
                    />
                  </Conditional>
                </div>,
              ],
              "className": "labelItems",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Label
                      hideText={false}
                      onClick={[Function]}
                      text="TODOS"
                    >
                      <Icon
                        iconName="TODOS"
                      />
                    </Label>,
                    <Conditional
                      condition={false}
                    >
                      <Icon
                        className="label_container_icon"
                        icon="delete.svg"
                        onClick={[Function]}
                      />
                    </Conditional>,
                  ],
                  "className": "label_container label_border",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "1",
                    "nodeType": "function",
                    "props": Object {
                      "children": <Icon
                        iconName="TODOS"
                      />,
                      "hideText": false,
                      "onClick": [Function],
                      "text": "TODOS",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "iconName": "TODOS",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <Icon
                        className="label_container_icon"
                        icon="delete.svg"
                        onClick={[Function]}
                      />,
                      "condition": false,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "className": "label_container_icon",
                        "icon": "delete.svg",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": "2",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Label
                      hideText={false}
                      onClick={[Function]}
                      text="Work"
                    >
                      <Icon
                        iconName="Work"
                      />
                    </Label>,
                    <Conditional
                      condition={true}
                    >
                      <Icon
                        className="label_container_icon"
                        icon="delete.svg"
                        onClick={[Function]}
                      />
                    </Conditional>,
                  ],
                  "className": "label_container ",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "2",
                    "nodeType": "function",
                    "props": Object {
                      "children": <Icon
                        iconName="Work"
                      />,
                      "hideText": false,
                      "onClick": [Function],
                      "text": "Work",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "iconName": "Work",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <Icon
                        className="label_container_icon"
                        icon="delete.svg"
                        onClick={[Function]}
                      />,
                      "condition": true,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "className": "label_container_icon",
                        "icon": "delete.svg",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <TodoForm
              addTODO={[Function]}
              direction="column"
              maxLength={10}
              placeholderText="Add Label"
            />,
            "condition": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "addTODO": [Function],
              "direction": "column",
              "maxLength": 10,
              "placeholderText": "Add Label",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`SidebarContainer Component render snapshot with hideText 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SidebarContainer
    currentLabel="TODOS"
    dispatch={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "data": "TODOS",
              "type": "DELETE_LABEL",
            },
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    hideText={true}
    labels={
      Array [
        Object {
          "id": 1,
          "name": "TODOS",
        },
        Object {
          "id": 2,
          "name": "Work",
        },
      ]
    }
    setCurrentLabel={
      [MockFunction] {
        "calls": Array [
          Array [
            "TODOS",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Box>
          <div
            className="labelItems"
          >
            <div
              className="label_container label_border"
            >
              <Label
                hideText={true}
                onClick={[Function]}
                text="TODOS"
              >
                <Icon
                  iconName="TODOS"
                />
              </Label>
              <Conditional
                condition={false}
              >
                <Icon
                  className="label_container_icon"
                  icon="delete.svg"
                  onClick={[Function]}
                />
              </Conditional>
            </div>
            <div
              className="label_container "
            >
              <Label
                hideText={true}
                onClick={[Function]}
                text="Work"
              >
                <Icon
                  iconName="Work"
                />
              </Label>
              <Conditional
                condition={false}
              >
                <Icon
                  className="label_container_icon"
                  icon="delete.svg"
                  onClick={[Function]}
                />
              </Conditional>
            </div>
          </div>
        </Box>,
        <Conditional
          condition={false}
        >
          <TodoForm
            addTODO={[Function]}
            direction="column"
            maxLength={10}
            placeholderText="Add Label"
          />
        </Conditional>,
      ],
      "className": "sidebar sidebar__small",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <div
            className="labelItems"
          >
            <div
              className="label_container label_border"
            >
              <Label
                hideText={true}
                onClick={[Function]}
                text="TODOS"
              >
                <Icon
                  iconName="TODOS"
                />
              </Label>
              <Conditional
                condition={false}
              >
                <Icon
                  className="label_container_icon"
                  icon="delete.svg"
                  onClick={[Function]}
                />
              </Conditional>
            </div>
            <div
              className="label_container "
            >
              <Label
                hideText={true}
                onClick={[Function]}
                text="Work"
              >
                <Icon
                  iconName="Work"
                />
              </Label>
              <Conditional
                condition={false}
              >
                <Icon
                  className="label_container_icon"
                  icon="delete.svg"
                  onClick={[Function]}
                />
              </Conditional>
            </div>
          </div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="label_container label_border"
              >
                <Label
                  hideText={true}
                  onClick={[Function]}
                  text="TODOS"
                >
                  <Icon
                    iconName="TODOS"
                  />
                </Label>
                <Conditional
                  condition={false}
                >
                  <Icon
                    className="label_container_icon"
                    icon="delete.svg"
                    onClick={[Function]}
                  />
                </Conditional>
              </div>,
              <div
                className="label_container "
              >
                <Label
                  hideText={true}
                  onClick={[Function]}
                  text="Work"
                >
                  <Icon
                    iconName="Work"
                  />
                </Label>
                <Conditional
                  condition={false}
                >
                  <Icon
                    className="label_container_icon"
                    icon="delete.svg"
                    onClick={[Function]}
                  />
                </Conditional>
              </div>,
            ],
            "className": "labelItems",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Label
                    hideText={true}
                    onClick={[Function]}
                    text="TODOS"
                  >
                    <Icon
                      iconName="TODOS"
                    />
                  </Label>,
                  <Conditional
                    condition={false}
                  >
                    <Icon
                      className="label_container_icon"
                      icon="delete.svg"
                      onClick={[Function]}
                    />
                  </Conditional>,
                ],
                "className": "label_container label_border",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "function",
                  "props": Object {
                    "children": <Icon
                      iconName="TODOS"
                    />,
                    "hideText": true,
                    "onClick": [Function],
                    "text": "TODOS",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "iconName": "TODOS",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <Icon
                      className="label_container_icon"
                      icon="delete.svg"
                      onClick={[Function]}
                    />,
                    "condition": false,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "className": "label_container_icon",
                      "icon": "delete.svg",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": "2",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Label
                    hideText={true}
                    onClick={[Function]}
                    text="Work"
                  >
                    <Icon
                      iconName="Work"
                    />
                  </Label>,
                  <Conditional
                    condition={false}
                  >
                    <Icon
                      className="label_container_icon"
                      icon="delete.svg"
                      onClick={[Function]}
                    />
                  </Conditional>,
                ],
                "className": "label_container ",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "2",
                  "nodeType": "function",
                  "props": Object {
                    "children": <Icon
                      iconName="Work"
                    />,
                    "hideText": true,
                    "onClick": [Function],
                    "text": "Work",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "iconName": "Work",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <Icon
                      className="label_container_icon"
                      icon="delete.svg"
                      onClick={[Function]}
                    />,
                    "condition": false,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "className": "label_container_icon",
                      "icon": "delete.svg",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <TodoForm
            addTODO={[Function]}
            direction="column"
            maxLength={10}
            placeholderText="Add Label"
          />,
          "condition": false,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "addTODO": [Function],
            "direction": "column",
            "maxLength": 10,
            "placeholderText": "Add Label",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Box>
            <div
              className="labelItems"
            >
              <div
                className="label_container label_border"
              >
                <Label
                  hideText={true}
                  onClick={[Function]}
                  text="TODOS"
                >
                  <Icon
                    iconName="TODOS"
                  />
                </Label>
                <Conditional
                  condition={false}
                >
                  <Icon
                    className="label_container_icon"
                    icon="delete.svg"
                    onClick={[Function]}
                  />
                </Conditional>
              </div>
              <div
                className="label_container "
              >
                <Label
                  hideText={true}
                  onClick={[Function]}
                  text="Work"
                >
                  <Icon
                    iconName="Work"
                  />
                </Label>
                <Conditional
                  condition={false}
                >
                  <Icon
                    className="label_container_icon"
                    icon="delete.svg"
                    onClick={[Function]}
                  />
                </Conditional>
              </div>
            </div>
          </Box>,
          <Conditional
            condition={false}
          >
            <TodoForm
              addTODO={[Function]}
              direction="column"
              maxLength={10}
              placeholderText="Add Label"
            />
          </Conditional>,
        ],
        "className": "sidebar sidebar__small",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <div
              className="labelItems"
            >
              <div
                className="label_container label_border"
              >
                <Label
                  hideText={true}
                  onClick={[Function]}
                  text="TODOS"
                >
                  <Icon
                    iconName="TODOS"
                  />
                </Label>
                <Conditional
                  condition={false}
                >
                  <Icon
                    className="label_container_icon"
                    icon="delete.svg"
                    onClick={[Function]}
                  />
                </Conditional>
              </div>
              <div
                className="label_container "
              >
                <Label
                  hideText={true}
                  onClick={[Function]}
                  text="Work"
                >
                  <Icon
                    iconName="Work"
                  />
                </Label>
                <Conditional
                  condition={false}
                >
                  <Icon
                    className="label_container_icon"
                    icon="delete.svg"
                    onClick={[Function]}
                  />
                </Conditional>
              </div>
            </div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="label_container label_border"
                >
                  <Label
                    hideText={true}
                    onClick={[Function]}
                    text="TODOS"
                  >
                    <Icon
                      iconName="TODOS"
                    />
                  </Label>
                  <Conditional
                    condition={false}
                  >
                    <Icon
                      className="label_container_icon"
                      icon="delete.svg"
                      onClick={[Function]}
                    />
                  </Conditional>
                </div>,
                <div
                  className="label_container "
                >
                  <Label
                    hideText={true}
                    onClick={[Function]}
                    text="Work"
                  >
                    <Icon
                      iconName="Work"
                    />
                  </Label>
                  <Conditional
                    condition={false}
                  >
                    <Icon
                      className="label_container_icon"
                      icon="delete.svg"
                      onClick={[Function]}
                    />
                  </Conditional>
                </div>,
              ],
              "className": "labelItems",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Label
                      hideText={true}
                      onClick={[Function]}
                      text="TODOS"
                    >
                      <Icon
                        iconName="TODOS"
                      />
                    </Label>,
                    <Conditional
                      condition={false}
                    >
                      <Icon
                        className="label_container_icon"
                        icon="delete.svg"
                        onClick={[Function]}
                      />
                    </Conditional>,
                  ],
                  "className": "label_container label_border",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "1",
                    "nodeType": "function",
                    "props": Object {
                      "children": <Icon
                        iconName="TODOS"
                      />,
                      "hideText": true,
                      "onClick": [Function],
                      "text": "TODOS",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "iconName": "TODOS",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <Icon
                        className="label_container_icon"
                        icon="delete.svg"
                        onClick={[Function]}
                      />,
                      "condition": false,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "className": "label_container_icon",
                        "icon": "delete.svg",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": "2",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Label
                      hideText={true}
                      onClick={[Function]}
                      text="Work"
                    >
                      <Icon
                        iconName="Work"
                      />
                    </Label>,
                    <Conditional
                      condition={false}
                    >
                      <Icon
                        className="label_container_icon"
                        icon="delete.svg"
                        onClick={[Function]}
                      />
                    </Conditional>,
                  ],
                  "className": "label_container ",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "2",
                    "nodeType": "function",
                    "props": Object {
                      "children": <Icon
                        iconName="Work"
                      />,
                      "hideText": true,
                      "onClick": [Function],
                      "text": "Work",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "iconName": "Work",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <Icon
                        className="label_container_icon"
                        icon="delete.svg"
                        onClick={[Function]}
                      />,
                      "condition": false,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "className": "label_container_icon",
                        "icon": "delete.svg",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <TodoForm
              addTODO={[Function]}
              direction="column"
              maxLength={10}
              placeholderText="Add Label"
            />,
            "condition": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "addTODO": [Function],
              "direction": "column",
              "maxLength": 10,
              "placeholderText": "Add Label",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
